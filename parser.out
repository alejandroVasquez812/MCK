Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHEN
    INTEGRAL
    PRINTLIST
    INFINITY
    FLOAT
    DERIVATIVE
    PRODUCT
    GOES
    LIMIT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> VAR = expression
Rule 2     statement -> expression
Rule 3     expression -> expression + expression
Rule 4     expression -> expression - expression
Rule 5     expression -> expression * expression
Rule 6     expression -> expression / expression
Rule 7     expression -> expression POWER expression
Rule 8     expression -> - expression
Rule 9     expression -> ( expression )
Rule 10    expression -> INT
Rule 11    expression -> VAR
Rule 12    expression -> X
Rule 13    expression -> SIN ( expression )
Rule 14    expression -> COS ( expression )
Rule 15    expression -> TAN ( expression )
Rule 16    expression -> SUM FROM expression TO expression OF expression

Terminals, with rules where they appear

(                    : 9 13 14 15
)                    : 9 13 14 15
*                    : 5
+                    : 3
-                    : 4 8
/                    : 6
=                    : 1
COS                  : 14
DERIVATIVE           : 
FLOAT                : 
FROM                 : 16
GOES                 : 
INFINITY             : 
INT                  : 10
INTEGRAL             : 
LIMIT                : 
OF                   : 16
POWER                : 7
PRINTLIST            : 
PRODUCT              : 
SIN                  : 13
SUM                  : 16
TAN                  : 15
TO                   : 16
VAR                  : 1 11
WHEN                 : 
X                    : 12
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 9 13 14 15 16 16 16
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . VAR = expression
    (2) statement -> . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    VAR             shift and go to state 8
    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 9
    statement                      shift and go to state 10

state 1

    (10) expression -> INT .

    +               reduce using rule 10 (expression -> INT .)
    -               reduce using rule 10 (expression -> INT .)
    *               reduce using rule 10 (expression -> INT .)
    /               reduce using rule 10 (expression -> INT .)
    POWER           reduce using rule 10 (expression -> INT .)
    $end            reduce using rule 10 (expression -> INT .)
    )               reduce using rule 10 (expression -> INT .)
    TO              reduce using rule 10 (expression -> INT .)
    OF              reduce using rule 10 (expression -> INT .)


state 2

    (9) expression -> ( . expression )
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 12

state 3

    (12) expression -> X .

    +               reduce using rule 12 (expression -> X .)
    -               reduce using rule 12 (expression -> X .)
    *               reduce using rule 12 (expression -> X .)
    /               reduce using rule 12 (expression -> X .)
    POWER           reduce using rule 12 (expression -> X .)
    $end            reduce using rule 12 (expression -> X .)
    )               reduce using rule 12 (expression -> X .)
    TO              reduce using rule 12 (expression -> X .)
    OF              reduce using rule 12 (expression -> X .)


state 4

    (15) expression -> TAN . ( expression )

    (               shift and go to state 14


state 5

    (8) expression -> - . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 15

state 6

    (13) expression -> SIN . ( expression )

    (               shift and go to state 16


state 7

    (16) expression -> SUM . FROM expression TO expression OF expression

    FROM            shift and go to state 17


state 8

    (1) statement -> VAR . = expression
    (11) expression -> VAR .

    =               shift and go to state 18
    +               reduce using rule 11 (expression -> VAR .)
    -               reduce using rule 11 (expression -> VAR .)
    *               reduce using rule 11 (expression -> VAR .)
    /               reduce using rule 11 (expression -> VAR .)
    POWER           reduce using rule 11 (expression -> VAR .)
    $end            reduce using rule 11 (expression -> VAR .)


state 9

    (2) statement -> expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    $end            reduce using rule 2 (statement -> expression .)
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 10

    (0) S' -> statement .



state 11

    (14) expression -> COS . ( expression )

    (               shift and go to state 24


state 12

    (9) expression -> ( expression . )
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    )               shift and go to state 25
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 13

    (11) expression -> VAR .

    +               reduce using rule 11 (expression -> VAR .)
    -               reduce using rule 11 (expression -> VAR .)
    *               reduce using rule 11 (expression -> VAR .)
    /               reduce using rule 11 (expression -> VAR .)
    POWER           reduce using rule 11 (expression -> VAR .)
    $end            reduce using rule 11 (expression -> VAR .)
    )               reduce using rule 11 (expression -> VAR .)
    TO              reduce using rule 11 (expression -> VAR .)
    OF              reduce using rule 11 (expression -> VAR .)


state 14

    (15) expression -> TAN ( . expression )
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 26

state 15

    (8) expression -> - expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 8 (expression -> - expression .)
    -               reduce using rule 8 (expression -> - expression .)
    *               reduce using rule 8 (expression -> - expression .)
    /               reduce using rule 8 (expression -> - expression .)
    POWER           reduce using rule 8 (expression -> - expression .)
    $end            reduce using rule 8 (expression -> - expression .)
    )               reduce using rule 8 (expression -> - expression .)
    TO              reduce using rule 8 (expression -> - expression .)
    OF              reduce using rule 8 (expression -> - expression .)

  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]
  ! *               [ shift and go to state 19 ]
  ! /               [ shift and go to state 21 ]
  ! POWER           [ shift and go to state 23 ]


state 16

    (13) expression -> SIN ( . expression )
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 27

state 17

    (16) expression -> SUM FROM . expression TO expression OF expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 28

state 18

    (1) statement -> VAR = . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 29

state 19

    (5) expression -> expression * . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 30

state 20

    (4) expression -> expression - . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 31

state 21

    (6) expression -> expression / . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 32

state 22

    (3) expression -> expression + . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 33

state 23

    (7) expression -> expression POWER . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 34

state 24

    (14) expression -> COS ( . expression )
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 35

state 25

    (9) expression -> ( expression ) .

    +               reduce using rule 9 (expression -> ( expression ) .)
    -               reduce using rule 9 (expression -> ( expression ) .)
    *               reduce using rule 9 (expression -> ( expression ) .)
    /               reduce using rule 9 (expression -> ( expression ) .)
    POWER           reduce using rule 9 (expression -> ( expression ) .)
    $end            reduce using rule 9 (expression -> ( expression ) .)
    )               reduce using rule 9 (expression -> ( expression ) .)
    TO              reduce using rule 9 (expression -> ( expression ) .)
    OF              reduce using rule 9 (expression -> ( expression ) .)


state 26

    (15) expression -> TAN ( expression . )
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    )               shift and go to state 36
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 27

    (13) expression -> SIN ( expression . )
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    )               shift and go to state 37
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 28

    (16) expression -> SUM FROM expression . TO expression OF expression
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    TO              shift and go to state 38
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 29

    (1) statement -> VAR = expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    $end            reduce using rule 1 (statement -> VAR = expression .)
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 30

    (5) expression -> expression * expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 5 (expression -> expression * expression .)
    -               reduce using rule 5 (expression -> expression * expression .)
    *               reduce using rule 5 (expression -> expression * expression .)
    /               reduce using rule 5 (expression -> expression * expression .)
    $end            reduce using rule 5 (expression -> expression * expression .)
    )               reduce using rule 5 (expression -> expression * expression .)
    TO              reduce using rule 5 (expression -> expression * expression .)
    OF              reduce using rule 5 (expression -> expression * expression .)
    POWER           shift and go to state 23

  ! POWER           [ reduce using rule 5 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]
  ! *               [ shift and go to state 19 ]
  ! /               [ shift and go to state 21 ]


state 31

    (4) expression -> expression - expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 4 (expression -> expression - expression .)
    -               reduce using rule 4 (expression -> expression - expression .)
    $end            reduce using rule 4 (expression -> expression - expression .)
    )               reduce using rule 4 (expression -> expression - expression .)
    TO              reduce using rule 4 (expression -> expression - expression .)
    OF              reduce using rule 4 (expression -> expression - expression .)
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23

  ! *               [ reduce using rule 4 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 4 (expression -> expression - expression .) ]
  ! POWER           [ reduce using rule 4 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]


state 32

    (6) expression -> expression / expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 6 (expression -> expression / expression .)
    -               reduce using rule 6 (expression -> expression / expression .)
    *               reduce using rule 6 (expression -> expression / expression .)
    /               reduce using rule 6 (expression -> expression / expression .)
    $end            reduce using rule 6 (expression -> expression / expression .)
    )               reduce using rule 6 (expression -> expression / expression .)
    TO              reduce using rule 6 (expression -> expression / expression .)
    OF              reduce using rule 6 (expression -> expression / expression .)
    POWER           shift and go to state 23

  ! POWER           [ reduce using rule 6 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]
  ! *               [ shift and go to state 19 ]
  ! /               [ shift and go to state 21 ]


state 33

    (3) expression -> expression + expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 3 (expression -> expression + expression .)
    -               reduce using rule 3 (expression -> expression + expression .)
    $end            reduce using rule 3 (expression -> expression + expression .)
    )               reduce using rule 3 (expression -> expression + expression .)
    TO              reduce using rule 3 (expression -> expression + expression .)
    OF              reduce using rule 3 (expression -> expression + expression .)
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23

  ! *               [ reduce using rule 3 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 3 (expression -> expression + expression .) ]
  ! POWER           [ reduce using rule 3 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]


state 34

    (7) expression -> expression POWER expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    +               reduce using rule 7 (expression -> expression POWER expression .)
    -               reduce using rule 7 (expression -> expression POWER expression .)
    *               reduce using rule 7 (expression -> expression POWER expression .)
    /               reduce using rule 7 (expression -> expression POWER expression .)
    POWER           reduce using rule 7 (expression -> expression POWER expression .)
    $end            reduce using rule 7 (expression -> expression POWER expression .)
    )               reduce using rule 7 (expression -> expression POWER expression .)
    TO              reduce using rule 7 (expression -> expression POWER expression .)
    OF              reduce using rule 7 (expression -> expression POWER expression .)

  ! +               [ shift and go to state 22 ]
  ! -               [ shift and go to state 20 ]
  ! *               [ shift and go to state 19 ]
  ! /               [ shift and go to state 21 ]
  ! POWER           [ shift and go to state 23 ]


state 35

    (14) expression -> COS ( expression . )
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    )               shift and go to state 39
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 36

    (15) expression -> TAN ( expression ) .

    +               reduce using rule 15 (expression -> TAN ( expression ) .)
    -               reduce using rule 15 (expression -> TAN ( expression ) .)
    *               reduce using rule 15 (expression -> TAN ( expression ) .)
    /               reduce using rule 15 (expression -> TAN ( expression ) .)
    POWER           reduce using rule 15 (expression -> TAN ( expression ) .)
    $end            reduce using rule 15 (expression -> TAN ( expression ) .)
    )               reduce using rule 15 (expression -> TAN ( expression ) .)
    TO              reduce using rule 15 (expression -> TAN ( expression ) .)
    OF              reduce using rule 15 (expression -> TAN ( expression ) .)


state 37

    (13) expression -> SIN ( expression ) .

    +               reduce using rule 13 (expression -> SIN ( expression ) .)
    -               reduce using rule 13 (expression -> SIN ( expression ) .)
    *               reduce using rule 13 (expression -> SIN ( expression ) .)
    /               reduce using rule 13 (expression -> SIN ( expression ) .)
    POWER           reduce using rule 13 (expression -> SIN ( expression ) .)
    $end            reduce using rule 13 (expression -> SIN ( expression ) .)
    )               reduce using rule 13 (expression -> SIN ( expression ) .)
    TO              reduce using rule 13 (expression -> SIN ( expression ) .)
    OF              reduce using rule 13 (expression -> SIN ( expression ) .)


state 38

    (16) expression -> SUM FROM expression TO . expression OF expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 40

state 39

    (14) expression -> COS ( expression ) .

    +               reduce using rule 14 (expression -> COS ( expression ) .)
    -               reduce using rule 14 (expression -> COS ( expression ) .)
    *               reduce using rule 14 (expression -> COS ( expression ) .)
    /               reduce using rule 14 (expression -> COS ( expression ) .)
    POWER           reduce using rule 14 (expression -> COS ( expression ) .)
    $end            reduce using rule 14 (expression -> COS ( expression ) .)
    )               reduce using rule 14 (expression -> COS ( expression ) .)
    TO              reduce using rule 14 (expression -> COS ( expression ) .)
    OF              reduce using rule 14 (expression -> COS ( expression ) .)


state 40

    (16) expression -> SUM FROM expression TO expression . OF expression
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

    OF              shift and go to state 41
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23


state 41

    (16) expression -> SUM FROM expression TO expression OF . expression
    (3) expression -> . expression + expression
    (4) expression -> . expression - expression
    (5) expression -> . expression * expression
    (6) expression -> . expression / expression
    (7) expression -> . expression POWER expression
    (8) expression -> . - expression
    (9) expression -> . ( expression )
    (10) expression -> . INT
    (11) expression -> . VAR
    (12) expression -> . X
    (13) expression -> . SIN ( expression )
    (14) expression -> . COS ( expression )
    (15) expression -> . TAN ( expression )
    (16) expression -> . SUM FROM expression TO expression OF expression

    -               shift and go to state 5
    (               shift and go to state 2
    INT             shift and go to state 1
    VAR             shift and go to state 13
    X               shift and go to state 3
    SIN             shift and go to state 6
    COS             shift and go to state 11
    TAN             shift and go to state 4
    SUM             shift and go to state 7

    expression                     shift and go to state 42

state 42

    (16) expression -> SUM FROM expression TO expression OF expression .
    (3) expression -> expression . + expression
    (4) expression -> expression . - expression
    (5) expression -> expression . * expression
    (6) expression -> expression . / expression
    (7) expression -> expression . POWER expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .)
    )               reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .)
    TO              reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .)
    OF              reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .)
    +               shift and go to state 22
    -               shift and go to state 20
    *               shift and go to state 19
    /               shift and go to state 21
    POWER           shift and go to state 23

  ! +               [ reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .) ]
  ! -               [ reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .) ]
  ! *               [ reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .) ]
  ! /               [ reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .) ]
  ! POWER           [ reduce using rule 16 (expression -> SUM FROM expression TO expression OF expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 42 resolved as shift
WARNING: shift/reduce conflict for - in state 42 resolved as shift
WARNING: shift/reduce conflict for * in state 42 resolved as shift
WARNING: shift/reduce conflict for / in state 42 resolved as shift
WARNING: shift/reduce conflict for POWER in state 42 resolved as shift
